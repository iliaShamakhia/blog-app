{"version":3,"sources":["services/blogs.js","components/Notification.js","components/RegistrationForm.js","components/LoginForm.js","services/login.js","services/users.js","components/Header.js","components/Users.js","reducers/notificationReducer.js","reducers/successReducer.js","reducers/blogsReducer.js","reducers/usersReducer.js","components/UserInfo.js","components/BlogInfo.js","components/BlogForm.js","components/Togglable.js","components/Blogs.js","App.js","store.js","index.js"],"names":["baseUrl","token","create","newObject","a","config","headers","Authorization","axios","post","response","data","getAll","get","setToken","newToken","update","url","id","put","remove","delete","addComment","comment","obj","Notification","success","message","Alert","variant","RegistrationForm","handleRegister","useState","name","setName","username","setUsername","password","setPassword","history","useHistory","Form","onSubmit","e","preventDefault","push","Group","Label","Control","type","value","onChange","target","Button","onClick","LoginForm","handleLogin","path","style","marginTop","to","login","credentials","getUsers","register","user","Header","errorMessage","Users","users","Table","striped","map","usr","blogs","length","setNotification","notification","notificationReducer","state","action","successReducer","setBlogs","blogsReducer","setUser","usersReducer","UserInfo","useParams","find","ListGroup","bl","Item","title","BlogInfo","handleLike","handleComment","handleRemove","setComment","blog","author","href","likes","comments","el","i","BlogForm","handleCreate","setTitle","setAuthor","setUrl","event","Togglable","React","forwardRef","props","ref","visible","setVisible","hideWhenVisible","display","showWhenVisible","toggleVisibility","useImperativeHandle","buttonLabel","children","displayName","Blogs","blogFormRef","className","sort","b","App","useRef","setUsers","dispatch","useDispatch","useSelector","useEffect","loggedUserJSON","window","localStorage","getItem","JSON","parse","blogService","then","setTimeout","loginService","setItem","stringify","userService","res","current","confirm","Navbar","collapseOnSelect","expand","bg","Toggle","aria-controls","Collapse","Nav","Link","as","clear","reducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24f4fece.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token = null\nconst setToken = newToken => {  token = `bearer ${newToken}`}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\nconst getAll = async () => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  const response = await axios.get(baseUrl,config)\n  return response.data\n}\nconst update=async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  let url=baseUrl+'/'+newObject.id\n  const response=await axios.put(url,newObject,config)\n  return response.data\n}\n\nconst remove=async id => {\n  const config = {\n    headers: { Authorization: token },\n  }\n  let url=baseUrl+'/'+id\n  await axios.delete(url,config)\n}\n\nconst addComment = async (comment,id) => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  let obj = { comment }\n  let url = baseUrl + `/${id}/` +'comments'\n  const response = await axios.post(url,obj,config)\n  return response.data\n}\n\nexport default { getAll, create, setToken, update, remove, addComment }","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Notification = ({ success,message }) => {\n  if (message === null) {\n    return null\n  }\n  if(success){\n    return (\n      <Alert variant=\"success\">\n        {message}\n      </Alert>\n    )\n  }else{\n    return(\n      <Alert variant=\"danger\">\n        {message}\n      </Alert>\n    )\n  }\n}\n\nexport default Notification","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\n\nconst RegistrationForm = ({ handleRegister }) => {\n  const [name, setName] = useState('')\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const history = useHistory()\n\n  return(\n    <div>\n      <h2 id=\"login-text\" >Register</h2>\n      <Form onSubmit={(e) => {\n        e.preventDefault()\n        handleRegister(name,username,password)\n        history.push('/')\n        setName('')\n        setUsername('')\n        setPassword('')\n      }\n      }>\n        <Form.Group>\n          <Form.Label>name:</Form.Label>\n          <Form.Control\n            id=\"name\"\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={({ target }) => setName(target.value)}\n          />\n          <Form.Label>username:</Form.Label>\n          <Form.Control\n            id=\"username\"\n            type=\"text\"\n            name=\"username\"\n            value={username}\n            onChange={({ target }) => setUsername(target.value)}\n          />\n          <Form.Label>password:</Form.Label>\n          <Form.Control\n            id=\"password\"\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={({ target }) => setPassword(target.value)}\n          />\n          <Button id=\"login-button\" variant=\"primary\" type=\"submit\">\n            register\n          </Button>\n          <Button id='cancel-regist-button' variant='danger' onClick={() => history.push('/')}>cancel</Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default RegistrationForm","import React from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport RegistrationForm from './RegistrationForm'\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from 'react-router-dom'\n\n\nconst LoginForm =({ handleLogin,username,setUsername,password,setPassword,handleRegister }) => {\n\n  return(\n    <Router>\n      <Switch>\n        <Route path='/register'>\n          <RegistrationForm handleRegister={handleRegister}/>\n        </Route>\n        <Route path='/'>\n          <div>\n            <h2 id=\"login-text\" >Log in to application</h2>\n            <Form onSubmit={handleLogin}>\n              <Form.Group>\n                <Form.Label>username:</Form.Label>\n                <Form.Control\n                  id=\"username\"\n                  type=\"text\"\n                  name=\"username\"\n                  value={username}\n                  onChange={({ target }) => setUsername(target.value)}\n                />\n                <Form.Label>password:</Form.Label>\n                <Form.Control\n                  id=\"password\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={password}\n                  onChange={({ target }) => setPassword(target.value)}\n                />\n                <Button id=\"login-button\" variant=\"primary\" type=\"submit\">\n                  login\n                </Button>\n                <div style={{ marginTop:'10px' }}>\n                  <Link to=\"/register\">register</Link>\n                </div>\n              </Form.Group>\n            </Form>\n          </div>\n        </Route>\n      </Switch>\n    </Router>\n  )\n}\n\nexport default LoginForm\n\n/* */","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getUsers = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst register = async (name,username,password) => {\n  const user = { name,username,password }\n  const response = await axios.post(baseUrl,user)\n  return response.data\n}\n\nexport default { getUsers, register }","import React from 'react'\nimport Notification from './Notification'\n\nconst Header = ({ success, errorMessage }) => {\n  return(\n    <div>\n      <Notification  success={success} message={errorMessage} />\n      <h2 id='blog-app'>blog app</h2>\n    </div>\n  )\n}\n\nexport default Header","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Table } from 'react-bootstrap'\n\nconst Users = ({ users }) => {\n  return(\n    <div>\n      <h2>Users</h2>\n      <Table striped>\n        <tbody>\n          <tr>\n            <td><strong>user</strong></td>\n            <td><strong>blogs created</strong></td>\n          </tr>\n          {users.map(usr =>\n            <tr key={usr.id}>\n              <td><Link to={`/users/${usr.id}`}>{usr.name}</Link></td>\n              <td>{usr.blogs.length}</td>\n            </tr>\n          )\n          }\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Users","//let timeout\n\nconst notificationReducer = (state = null, action) => {\n  switch(action.type){\n  case 'SET_NOTIFICATION':\n    state = action.notification\n    return state\n  case 'REMOVE_NOTIFICATION':\n    state = null\n    return state\n  default:\n    return state\n  }\n}\n\nexport const setNotification = (notification, /*time*/) => {\n  /*return dispatch => {\n    if(timeout)clearTimeout(timeout)\n    dispatch({\n      type: 'SET_NOTIFICATION',\n      notification\n    })\n    timeout = setTimeout( () => {\n      dispatch({\n        type: 'REMOVE_NOTIFICATION'\n      })\n    },time*1000)\n  }\n  */\n  return {\n    type: 'SET_NOTIFICATION',\n    notification\n  }\n}\n\nexport const removeNotification = () => {\n  return {\n    type:'REMOVE_NOTIFICATION'\n  }\n}\n\nexport default notificationReducer","const successReducer = (state=null, action) => {\n  switch(action.type){\n  case 'SET_SUCCESS':\n    state = true\n    return state\n  case 'SET_FAILURE':\n    state = false\n    return state\n  default:\n    return state\n  }\n}\n\nexport const setSuccess = () => {\n  return {\n    type: 'SET_SUCCESS'\n  }\n}\n\nexport const setFailure = () => {\n  return {\n    type:'SET_FAILURE'\n  }\n}\n\nexport default successReducer","const blogsReducer = (state=[], action) => {\n  switch(action.type){\n  case 'SET_BLOGS':\n    state = action.blogs\n    return state\n  default:\n    return state\n  }\n}\n\nexport const setBlogs = (blogs) => {\n  return {\n    type: 'SET_BLOGS',\n    blogs\n  }\n}\n\nexport default blogsReducer","const usersReducer = (state = null, action) => {\n  switch(action.type){\n  case 'SET_USER':\n    state = action.user\n    return state\n  default:\n    return state\n  }\n}\n\nexport const setUser = (user) => {\n  return {\n    type: 'SET_USER',\n    user\n  }\n}\n\nexport default usersReducer","import React from 'react'\nimport { useParams } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport { ListGroup } from 'react-bootstrap'\n\nconst UserInfo = ({ users }) => {\n  const id = useParams().id\n  const user = users.find(usr => usr.id === id)\n  if (!user) {\n    return null\n  }\n  return(\n    <div>\n      <h2>{user.name}</h2>\n      <p><strong>added blogs</strong></p>\n      <ListGroup variant='flush'>\n        {user.blogs.map(bl => <ListGroup.Item variant='secondary' key={bl.id}><Link to={`/blogs/${bl.id}`}>{bl.title}</Link></ListGroup.Item>)}\n      </ListGroup>\n    </div>\n  )\n}\n\nexport default UserInfo","import React, { useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { ListGroup, Form, Button } from 'react-bootstrap'\n\nconst BlogInfo = ({ blogs, handleLike, handleComment, handleRemove }) => {\n  const [comment, setComment] = useState('')\n  const history = useHistory()\n  const id = useParams().id\n  const blog = blogs.find(bl => bl.id === id)\n  if(!blog){\n    return null\n  }\n  return(\n    <div>\n      <h2>{blog.title}</h2>\n      <p>by: {blog.author}</p>\n      <p>for more info visit: <a href={blog.url}>{blog.url}</a></p>\n      <p>likes: {blog.likes} <Button id='like-button' variant='primary' onClick={() => handleLike(blog)}>like</Button></p>\n      <Button id='blog-remove-button' variant='danger' onClick={() => { handleRemove(blog.title,blog.author,blog.id);history.push('/blogs')}}>remove</Button>\n      <h4>comments</h4>\n      <ListGroup variant='flush'>\n        {blog.comments?blog.comments.map((el,i) => <ListGroup.Item variant='secondary' key={i}>{el}</ListGroup.Item>):null}\n      </ListGroup>\n      <Form onSubmit={(e) => {e.preventDefault();handleComment(comment,blog.id);setComment('')}}>\n        <Form.Group>\n          <Form.Control\n            id=\"comment\"\n            type=\"text\"\n            name=\"comment\"\n            value={comment}\n            onChange={({ target }) => setComment(target.value)}\n          />\n          <Button id=\"comment-button\" variant=\"primary\" type=\"submit\">\n            add comment\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default BlogInfo","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst BlogForm =({ handleCreate }) => {\n  const [title,setTitle]=useState('')\n  const [author,setAuthor]=useState('')\n  const [url,setUrl]=useState('')\n\n  const addBlog=(event) => {\n    event.preventDefault()\n    let newBlog={\n      title,\n      author,\n      url\n    }\n    handleCreate(newBlog)\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n  }\n  return(\n    <div>\n      <h2>create new</h2>\n      <Form onSubmit={addBlog}>\n        <Form.Group>\n          <Form.Label>title:</Form.Label>\n          <Form.Control\n            id=\"title\"\n            type=\"text\"\n            name=\"title\"\n            value={title}\n            onChange={({ target }) => setTitle(target.value)}\n          />\n          <Form.Label>author:</Form.Label>\n          <Form.Control\n            id=\"author\"\n            type=\"text\"\n            name=\"author\"\n            value={author}\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n          <Form.Label>url:</Form.Label>\n          <Form.Control\n            id=\"url\"\n            type=\"text\"\n            name=\"url\"\n            value={url}\n            onChange={({ target }) => setUrl(target.value)}\n          />\n          <Button id=\"submit-blog-button\" variant=\"primary\" type=\"submit\">\n            create\n          </Button>\n        </Form.Group>\n      </Form>\n    </div>\n  )\n}\n\nexport default BlogForm","import React, { useState,useImperativeHandle } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button } from 'react-bootstrap'\n\nconst Togglable = React.forwardRef((props, ref) => {\n  const [visible, setVisible] = useState(false)\n\n  const hideWhenVisible = { display: visible ? 'none' : '' }\n  const showWhenVisible = { display: visible ? '' : 'none' }\n\n  const toggleVisibility = () => {\n    setVisible(!visible)\n  }\n\n  useImperativeHandle(ref, () => {\n    return {\n      toggleVisibility\n    }\n  })\n\n  return (\n    <div>\n      <div style={hideWhenVisible}>\n        <Button id='create-blog-button' variant='primary' onClick={toggleVisibility}>{props.buttonLabel}</Button>\n      </div>\n      <div style={showWhenVisible}>\n        {props.children}\n        <Button id='cancel-button' variant='danger' onClick={toggleVisibility}>cancel</Button>\n      </div>\n    </div>\n  )\n})\n\nTogglable.displayName = 'Togglable'\n\nTogglable.propTypes = {\n  buttonLabel: PropTypes.string.isRequired\n}\n\n\nexport default Togglable","import React from 'react'\n//import Blog from './Blog'\nimport BlogForm from './BlogForm'\nimport Togglable from './Togglable'\nimport { Link } from 'react-router-dom'\nimport { Table } from 'react-bootstrap'\n\nconst Blogs = ({ blogFormRef, handleCreate, blogs }) => {\n  return(\n    <div className='blogs'>\n      <Togglable buttonLabel='create new blog' ref={blogFormRef}>\n        <BlogForm handleCreate={handleCreate}/>\n      </Togglable>\n      <Table striped>\n        <tbody>\n          {blogs.sort((a,b) => b.likes-a.likes).map(blog =>\n            <tr key={blog.id}>\n              <td>\n                <Link to={`/blogs/${blog.id}`}>\n                  {blog.title}\n                </Link>\n              </td>\n              <td>\n                {blog.author}\n              </td>\n            </tr>\n          )}\n        </tbody>\n      </Table>\n    </div>\n  )\n}\n\nexport default Blogs","import React, { useState, useEffect, useRef } from 'react'\nimport blogService from './services/blogs'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport loginService from './services/login'\nimport userService from './services/users'\n//\nimport {\n  BrowserRouter as Router,\n  Switch, Route, Link\n} from 'react-router-dom'\nimport Header from './components/Header'\nimport Users from './components/Users'\n//\nimport { setNotification, removeNotification } from './reducers/notificationReducer'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { setSuccess, setFailure } from './reducers/successReducer'\nimport { setBlogs } from './reducers/blogsReducer'\nimport { setUser } from './reducers/usersReducer'\nimport UserInfo from './components/UserInfo'\nimport BlogInfo from './components/BlogInfo'\nimport Blogs from './components/Blogs'\nimport { Navbar, Nav, Button } from 'react-bootstrap'\n\n\nconst App = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const blogFormRef = useRef()\n  //\n  const [users, setUsers] = useState([])\n  //\n  const dispatch = useDispatch()\n  const errorMessage = useSelector(state => state.notification)\n  const success = useSelector(state => state.success)\n  const blogs = useSelector(state => state.blogs)\n  const user = useSelector(state => state.user)\n\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedNoteappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      dispatch(setUser(user))\n      blogService.setToken(user.token)\n      blogService.getAll().then(blogs => {\n        dispatch(setBlogs( blogs ))\n      }\n      )\n    }\n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    if(username===''||password===''){\n      dispatch(setFailure())\n      dispatch(setNotification('username & password must not be empty'))\n      setTimeout(() => {dispatch(removeNotification())}, 5000)\n      return\n    }\n    try {\n      const user = await loginService.login({\n        username, password,\n      })\n      window.localStorage.setItem(\n        'loggedBlogAppUser', JSON.stringify(user)\n      )\n      blogService.setToken(user.token)\n      dispatch(setUser(user))\n      setUsername('')\n      setPassword('')\n      dispatch(setSuccess())\n      dispatch(setNotification('Log in success'))\n      setTimeout(() => {dispatch(removeNotification())}, 5000)\n      blogService.getAll().then(blogs =>\n        dispatch(setBlogs( blogs ))\n      )\n      userService.getUsers().then(res => setUsers(res))\n    } catch (exception) {\n      dispatch(setFailure())\n      dispatch(setNotification('wrong username or password'))\n      setTimeout(() => {dispatch(removeNotification())}, 5000)\n    }\n  }\n\n  const handleRegister = (name,username,password) => {\n    if(name===''||username===''||password===''){\n      dispatch(setFailure())\n      dispatch(setNotification('name, username & password must not be empty'))\n      setTimeout(() => {dispatch(removeNotification())}, 5000)\n      return\n    }\n    try{\n      userService.register(name,username,password)\n      dispatch(setSuccess())\n      dispatch(setNotification('Registration success'))\n      setTimeout(() => {dispatch(removeNotification())}, 5000)\n    }catch(e){\n      dispatch(setFailure())\n      dispatch(setNotification('Registration Failed'))\n      setTimeout(() => {dispatch(removeNotification())}, 5000)\n    }\n  }\n\n  const handleLogout=() => {\n    window.localStorage.clear()\n    dispatch(setUser(null))\n    dispatch(setSuccess())\n    dispatch(setNotification('Log out success'))\n    setTimeout(() => {dispatch(removeNotification())}, 5000)\n  }\n\n  const handleCreate=async (obj) => {\n    if(!obj.title||!obj.author||!obj.url){\n      dispatch(setFailure())\n      dispatch(setNotification('Please fill in all required fields'))\n      setTimeout(() => {dispatch(removeNotification())}, 5000)\n      return\n    }else{\n      blogFormRef.current.toggleVisibility()\n      await blogService.create(obj)\n      blogService.getAll().then(blogs =>\n        dispatch(setBlogs( blogs ))\n      )\n      userService.getUsers().then(res => setUsers(res))\n      dispatch(setSuccess())\n      dispatch(setNotification(`a new blog ${obj.title} by ${obj.author} added`))\n      setTimeout(() => {dispatch(removeNotification())}, 5000)\n    }\n  }\n\n  const handleLike=async (obj) => {\n    obj.likes=obj.likes+1\n    obj.user=obj.user.id\n    await blogService.update(obj)\n    blogService.getAll().then(blogs =>\n      dispatch(setBlogs( blogs ))\n    )\n  }\n\n  const handleRemove=async(title,author,id) => {\n    if(window.confirm(`Remove blog ${title} by ${author}?`)){\n      await blogService.remove(id)\n      blogService.getAll().then(blogs =>\n        dispatch(setBlogs( blogs ))\n      )\n      userService.getUsers().then(res => setUsers(res))\n    }\n  }\n\n  const handleComment = async (comment,id) => {\n    await blogService.addComment(comment,id)\n    blogService.getAll().then(blogs =>\n      dispatch(setBlogs( blogs ))\n    )\n  }\n\n  if (user === null) {\n    return (\n      <div>\n        <LoginForm handleLogin={handleLogin} handleRegister={handleRegister} username={username} setUsername={setUsername} password={password} setPassword={setPassword}/>\n        <Notification  success={success} message={errorMessage} />\n      </div>\n    )\n  }else{\n    return (\n      <Router>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"mr-auto test\">\n              <Nav.Link href=\"#\" as=\"span\">\n                <Link to=\"/blogs\">blogs</Link>\n              </Nav.Link>\n              <Nav.Link href=\"#\" as=\"span\">\n                <Link to=\"/users\">users</Link>\n              </Nav.Link>\n              <Nav.Link id='logged-in-user'href=\"#\" as=\"span\">\n                <p>{user.name} Logged in</p>\n              </Nav.Link>\n              <Button id='logout-button' variant='primary' onClick={handleLogout}>logout</Button>\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <Header success={success} errorMessage={errorMessage} />\n        <Switch>\n          <Route path=\"/users/:id\">\n            <UserInfo users={users} />\n          </Route>\n          <Route path=\"/blogs/:id\">\n            <BlogInfo blogs={blogs} handleLike={handleLike} handleComment={handleComment} handleRemove={handleRemove}/>\n          </Route>\n          <Route path='/blogs'>\n            <Blogs blogFormRef={blogFormRef} handleCreate={handleCreate} blogs={blogs} handleLike={handleLike} handleRemove={handleRemove} user={user}/>\n          </Route>\n          <Route path='/users'>\n            <Users users={users}/>\n          </Route>\n          <Route path='/'>\n            <Blogs blogFormRef={blogFormRef} handleCreate={handleCreate} blogs={blogs} handleLike={handleLike} handleRemove={handleRemove} user={user}/>\n          </Route>\n        </Switch>\n      </Router>\n    )\n  }\n}\n\nexport default App","import { createStore, combineReducers } from 'redux'\nimport notificationReducer from './reducers/notificationReducer'\nimport successReducer from './reducers/successReducer'\nimport blogsReducer from './reducers/blogsReducer'\nimport usersReducer from './reducers/usersReducer'\n\nconst reducer = combineReducers({\n  blogs: blogsReducer,\n  notification: notificationReducer,\n  success: successReducer,\n  user: usersReducer\n})\n\nconst store = createStore(reducer)\n\nexport default store","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nReactDOM.render(\n  <Provider store={store} >\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)"],"sourceRoot":""}